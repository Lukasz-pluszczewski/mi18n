{"version":3,"file":"mi18n.js","sources":["../src/config.js","../src/i18nService.js","../src/i18nRedux.js","../src/index.js"],"sourcesContent":["const config = {\n  errors: {\n    i18n: {\n      namespaceNotFound: 'Namespace not found',\n      namespaceNotObject: 'Provided namespace is path to translation. Provide path to object containing translations to set a namespace',\n      translationNotFound: 'Translation not found',\n      translationNotString: 'Provided path points to object not string. To create scoped translator use namespace() method instead',\n      corruptedTranslations: 'Translations error. This is most likely caused by wrong type of data in translations object in redux state. Translation must always be string.',\n      pluralNotArray: 'Forms parameter for getPlural method is not an array',\n      pluralNotNumber: 'Number parameter for getPlural method is not a number',\n      PathNotProvided: 'Path to translations has not been provided',\n    },\n  },\n};\n\nexport default config;","import _ from 'lodash';\nimport config from './config';\n\n// mocked logger until publishing logger library\n/* eslint-disable no-empty-function */\nglobal.logger = new Proxy(function() {}, {\n  get: function(target, name) {\n    return function(...args) {\n      console.log(...args);\n    };\n  },\n  apply: function(target, thisArg, argumentsList) {},\n});\n\n/**\n * Replaces all occurrences of 'search' in 'string' with 'replace'\n * @param {string} string\n * @param {string|object} search string or object with search strings as keys and replaces strings as values\n * @param {string} replace\n * @return {string} string after replace\n */\nfunction replaceAll(string, search, replace) {\n  if (_.isPlainObject(search)) {\n    return _.reduce(search, (result, replace, search) => {\n      return replaceAll(result, search, replace);\n    }, string);\n  }\n  return string.replace(new RegExp(search, 'g'), replace);\n}\n\nexport const translatorFactory = {\n  cachedTranslators: {},\n  cachedState: null,\n\n  /**\n   * Creates translator and sets language and translations to those from state\n   * @param {object} state - {languageCode: 'en', translations: {[key]: 'text'}}\n   * @param {string} translatorNamespace\n   * @return {object} translator\n   */\n  getTranslator(state, translatorNamespace) {\n    // checking if translations changed, checking deep equality is too resource hungry\n    if (\n      translatorFactory.cachedState\n      && state.languageCode === translatorFactory.cachedState.languageCode\n    ) {\n      if (translatorFactory.cachedTranslators[translatorNamespace]) {\n        return translatorFactory.cachedTranslators[translatorNamespace];\n      }\n      logger.translations(`No translator cached for namespace '${translatorNamespace || null}' in language ${state.languageCode}`);\n    } else {\n      logger.translations(`Language changed from ${translatorFactory.cachedState ? translatorFactory.cachedState.languageCode : 'None'} to ${state.languageCode}. Requested namespace '${translatorNamespace || null}'. Clearing cache.`);\n      translatorFactory.cachedTranslators = {};\n      translatorFactory.cachedState = null;\n    }\n\n\n    const translator = {\n      state: state,\n      translatorNamespace: translatorNamespace,\n      pluralMap: {\n        default: number => number === 1 ? 0 : 1,\n        pl: number => {\n          const last = _.takeRight(number.toString().split(''), 1).join('');\n          const lastTwo = _.takeRight(number.toString().split(''), 2).join('');\n          if (number === 1) {\n            return 0;\n          }\n          if ( (last === '2' || last === '3' || last === '4')\n            && !(lastTwo === '12' || lastTwo === '13' || lastTwo === '14') ) {\n            return 1;\n          }\n          return 2;\n        },\n        en: number => number === 1 ? 0 : 1,\n      },\n\n      /**\n       * Replaces all occurrences of replace[keys] with replace[values]\n       * @param {string} string\n       * @param {object} replace\n       * @return {string} replaced string\n       */\n      replace(string, replace) {\n        const fixedReplaces = _.reduce(replace, (replaces, replace, search) => {\n          replaces[`{{${search}}}`] = replace;\n          return replaces;\n        }, {});\n        return replaceAll(string, fixedReplaces);\n      },\n\n      /**\n       * Chooses proper form from array of forms based on the number provided\n       * @param {number} number\n       * @param {array} forms\n       * @return {string} chosen form\n       */\n      getPlural(number, forms) {\n        if (!_.isArray(forms)) {\n          logger.translations(`${config.errors.i18n.pluralNotArray}`, {\n            number,\n            forms,\n          });\n          return forms;\n        }\n        if (!_.isNumber(number)) {\n          logger.translations(`${config.errors.i18n.pluralNotNumber}`, {\n            number,\n            forms,\n          });\n          return forms[0];\n        }\n        const pluralMap = this.pluralMap[this.state.languageCode] || this.pluralMap.default;\n        return forms[pluralMap(number)];\n      },\n\n      /**\n       * Returns translations object optionally namespaced by path\n       * @param {string} path - optional\n       * @param {boolean} absolute - indicates if given path is absolute path and should not be preceded by translatorNamespace\n       * @return {object|string} optionally namespaced translations\n       */\n      getTranslations(path, absolute = false) {\n        let absolutePath = this.translatorNamespace && !absolute ? this.translatorNamespace : '';\n        if (_.isString(path) && path) {\n          if (absolutePath) {\n            absolutePath = `${absolutePath}.${path}`;\n          } else {\n            absolutePath = path;\n          }\n        }\n        if (absolutePath) {\n          return _.get(this.state.translations, absolutePath);\n        }\n        return this.state.translations;\n      },\n\n      /**\n       * Returns current language code\n       * @return {string} language code\n       */\n      getLanguage() {\n        return this.state.languageCode;\n      },\n\n      /**\n       * Returns new instance of translator with part of the translations from given namespacePath\n       * @param {string} namespacePath\n       * @param {boolean} absolute - indicates if given namespace is absolute path and should not be preceded by translatorNamespace\n       * @return {object} translator\n       */\n      namespace(namespacePath, absolute = false) {\n        const absolutePath = this.translatorNamespace && !absolute ? `${this.translatorNamespace}.${namespacePath}` : namespacePath;\n        if (_.isString(absolutePath) && absolutePath) {\n          const namespacedTranslations = _.get(this.state.translations, absolutePath);\n          if (!namespacedTranslations) {\n            logger.translations(config.errors.i18n.namespaceNotFound, {\n              language: this.state.languageCode,\n              translatorNamespace: this.translatorNamespace,\n              providedNamespace: namespacePath,\n              absolute,\n              absolutePath,\n            });\n          } else if (_.isString(namespacedTranslations)) {\n            logger.translations(config.errors.i18n.namespaceNotObject, {\n              language: this.state.languageCode,\n              translatorNamespace: this.translatorNamespace,\n              providedNamespace: namespacePath,\n              absolute,\n              absolutePath,\n              foundNamespace: namespacedTranslations,\n            });\n          }\n        }\n        return translatorFactory.getTranslator(state, absolutePath);\n      },\n      n(namespacePath, absolute = false) {\n        return this.namespace(namespacePath, absolute);\n      },\n\n      getTranslatedString(path, replace = null, number = null) {\n        const filteredPath = _.filter([this.translatorNamespace, path], path => _.isString(path) && path);\n        if (!filteredPath.length) {\n          throw new Error(config.errors.i18n.PathNotProvided);\n        }\n        const joinedPath = filteredPath.join('.');\n        let result = _.get(this.state.translations, joinedPath, false);\n        if (result === false) {\n          logger.translations(`${config.errors.i18n.translationNotFound}: \"${joinedPath}\"`, {\n            language: this.state.languageCode,\n            translatorNamespace: this.translatorNamespace,\n            providedPath: path,\n            absolutePath: joinedPath,\n          });\n          return { result, joinedPath };\n        }\n        if (_.isPlainObject(result)) {\n          logger.translations(`${config.errors.i18n.translationNotString}`, {\n            language: this.state.languageCode,\n            translatorNamespace: this.translatorNamespace,\n            providedPath: path,\n            absolutePath: joinedPath,\n            foundTranslation: result,\n          });\n          return { result, joinedPath };\n        }\n        if (_.isArray(result)) {\n          result = this.getPlural(number, result);\n        }\n        if (!_.isString(result)) {\n          throw new Error(config.errors.i18n.corruptedTranslations);\n        }\n\n        if (replace) {\n          result = this.replace(result, replace);\n        }\n\n        return { result, joinedPath };\n      },\n      translateWithCallback(path, replace = null, number = null, cb = str => str) {\n        const result = this.getTranslatedString(path, replace, number);\n        if (result.result === false) {\n          return result.joinedPath;\n        }\n        return cb(result.result);\n      },\n\n      /**\n       * Translates given path\n       * @param {string} path\n       * @param {object} replace\n       * @param {number} number\n       * @return {string} translated text or path when not found\n       */\n      translate(path, replace = null, number = null) {\n        const result = this.getTranslatedString(path, replace, number);\n        if (result.result === false) {\n          return result.joinedPath;\n        }\n        return result.result;\n      },\n    };\n    translator.translate.capitalize\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.capitalize);\n\n    translator.translate.toUpper\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.toUpper);\n\n    translator.translate.toLower\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.toLower);\n\n    translator.translate.camelCase\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.camelCase);\n\n    translator.translate.lowerCase\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.lowerCase);\n\n    translator.translate.lowerFirst\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.lowerFirst);\n\n    translator.translate.snakeCase\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.snakeCase);\n\n    translator.translate.kebabCase\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.kebabCase);\n\n    translator.translate.startCase\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.startCase);\n\n    translator.translate.titleCase\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.startCase);\n\n    translator.translate.upperCase\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.upperCase);\n\n    translator.translate.upperFirst\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.upperFirst);\n\n    translator.translate.deburr\n      = (path, replace = null, number = null) => translator.translateWithCallback(path, replace, number, _.deburr);\n\n    translator.t = translator.translate;\n\n    translatorFactory.cachedTranslators[translatorNamespace] = translator;\n    translatorFactory.cachedState = state;\n    return translator;\n  },\n\n};\n\n\nexport default translatorFactory.getTranslator;\n","const SET_LANGUAGE = 'SET_LANGUAGE';\nconst initialState = {\n  languageCode: '',\n  translations: {},\n};\n\n\n/* ----- Redux actions ------ */\n\n/**\n * setLanguage - action for setting language\n *\n * @param  {string} languageCode\n * @param  {object} translations object with translations\n * @return {object} action\n */\nexport function setLanguage(languageCode, translations) {\n  return {\n    type: SET_LANGUAGE,\n    payload: { languageCode, translations },\n  };\n}\n\n/**\n * Reducer for managing language change\n * @param {object} state\n * @param {object} action\n * @returns {object} new state\n */\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_LANGUAGE:\n      return {\n        ...state,\n        languageCode: action.payload.languageCode,\n        translations: action.payload.translations,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const actionType = SET_LANGUAGE;\n","import getT from './i18nService';\nimport {\n  setLanguage as setLangImport,\n  reducer as reducerImport,\n  actionType as actionTypeImport,\n} from './i18nRedux';\n\nexport default getT;\n\nexport const setLanguage = setLangImport;\nexport const reducer = reducerImport;\nexport const actionType = actionTypeImport;\n"],"names":["config","global","logger","Proxy","target","name","log","thisArg","argumentsList","replaceAll","string","search","replace","_","isPlainObject","reduce","result","RegExp","translatorFactory","state","translatorNamespace","cachedState","languageCode","cachedTranslators","translations","translator","number","last","takeRight","toString","split","join","lastTwo","fixedReplaces","replaces","forms","isArray","errors","i18n","pluralNotArray","isNumber","pluralNotNumber","pluralMap","default","path","absolute","absolutePath","isString","get","namespacePath","namespacedTranslations","namespaceNotFound","namespaceNotObject","getTranslator","namespace","filteredPath","filter","length","Error","PathNotProvided","joinedPath","translationNotFound","translationNotString","getPlural","corruptedTranslations","cb","str","getTranslatedString","translate","capitalize","translateWithCallback","toUpper","toLower","camelCase","lowerCase","lowerFirst","snakeCase","kebabCase","startCase","titleCase","upperCase","upperFirst","deburr","t","SET_LANGUAGE","initialState","setLanguage","reducer","action","type","payload","actionType","setLangImport","reducerImport","actionTypeImport"],"mappings":"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"}